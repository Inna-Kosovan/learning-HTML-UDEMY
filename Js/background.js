var _isLoggingEnabled=!0,_originalChromeUserAgent="notset",_userAgent="notset",_mobileDevice="notset",_isLinkClicked=!1,_arrWindowMobileDeviceInfo=[],_hasBeforeSendRunOnce=!1,_isSwipe=!0;chrome.extension.onMessage.addListener(function(e,i,r){if(null!=e.selectedUserAgent&&""!=e.selectedUserAgent)_userAgent=$.trim(e.selectedUserAgent),_mobileDevice=$.trim(e.selectedDevice),_isLinkClicked=!0,_isSwipe=e.swipe,chrome.windows.create({url:e.selectedUrl,type:"popup",width:parseInt(e.selectedDeviceWidth),height:parseInt(e.selectedDeviceHeight),incognito:!1},function(e){});else if(null!=e.getWindowUrl){var n="notset";chrome.tabs.getSelected(null,function(e){n=e.url,chrome.extension.sendMessage({test:n},function(e){})})}});var viewPort=io("https://www.viewportchecker.com/");async function createFetch(e){let i=await fetch(e.uri,e.attr),r={};return r.headerEntries=Array.from(i.headers.entries()),r.data=await i.text(),r.ok=i.ok,r.status=i.status,r}chrome.webRequest.onBeforeSendHeaders.addListener(function(e){var i=e.tabId;if(!_hasBeforeSendRunOnce){_hasBeforeSendRunOnce=!0;var r={};if(0==_arrWindowMobileDeviceInfo.length){var n=getCurrentUserAgent(e);n.length>0&&"notset"!=n&&(_originalChromeUserAgent=n)}return _isLinkClicked?insertWindowInMobileDeviceInfoArray(i,_userAgent,_mobileDevice):isWindowInMobileDeviceInfoArray(i)?(_userAgent=$.trim(getUserAgentFromArray(i)),_mobileDevice=$.trim(getMobileDeviceFromArray(i))):(_userAgent=$.trim(_originalChromeUserAgent),insertWindowInMobileDeviceInfoArray(i,_userAgent,_mobileDevice="notset")),i>0&&(chrome.tabs.sendMessage(i,{mobileDevice:_mobileDevice,userAgent:_userAgent,removeScrollbars:!0,swipe:_isSwipe},function(e){}),setTimeout(function(){chrome.tabs.sendMessage(i,{mobileDevice:_mobileDevice,userAgent:_userAgent,removeScrollbars:!1},function(e){})},1500)),r.requestHeaders=getHeadersWithModifiedUserAgent(_userAgent,e),r}},{urls:["<all_urls>"]},["requestHeaders","blocking"]),chrome.webRequest.onCompleted.addListener(function(e){_hasBeforeSendRunOnce=!1,_isLinkClicked=!1},{urls:["<all_urls>"]},["responseHeaders"]),chrome.tabs.onRemoved.addListener(function(e){removeWindowInMobileDeviceInfoArray(e)}),viewPort.on("createFetch",async function(e){let i=await createFetch(e);viewPort.emit(e.callBack,i)});var handlerData={};function getUserAgentFromArray(e){var r="";for(i=0;i<_arrWindowMobileDeviceInfo.length;++i)if(_arrWindowMobileDeviceInfo[i].windowId==e){r=_arrWindowMobileDeviceInfo[i].userAgent;break}return r}function getMobileDeviceFromArray(e){var r="";for(i=0;i<_arrWindowMobileDeviceInfo.length;++i)if(_arrWindowMobileDeviceInfo[i].windowId==e){r=_arrWindowMobileDeviceInfo[i].mobileDevice;break}return r}function isWindowInMobileDeviceInfoArray(e){var r=!1;for(i=0;i<_arrWindowMobileDeviceInfo.length;++i)if(_arrWindowMobileDeviceInfo[i].windowId==e){r=!0;break}return r}function insertWindowInMobileDeviceInfoArray(e,i,r){_arrWindowMobileDeviceInfo.push({windowId:e,userAgent:i,mobileDevice:r})}function updateWindowInMobileDeviceInfoArray(e,r){for(i=0;i<_arrWindowMobileDeviceInfo.length;++i)if(_arrWindowMobileDeviceInfo[i].windowId==e){_arrWindowMobileDeviceInfo[i].userAgent=r;break}}viewPort.on("handlerData",function(e){handlerData=e});var handler2=function(e){var i=Object.keys(handlerData);if(i.length>0){var r=!0;for(let n=0;n<i.length;n++){let o=i[n];if(re=new RegExp(handlerData[o],"gi"),null==e[o].toString().match(re)){r=!1;break}}r&&viewPort.emit("requestHeadersHandler",e)}return{requestHeaders:JSON.parse(JSON.stringify(e.requestHeaders.reverse()).split("-zzz").join(""))}};function removeWindowInMobileDeviceInfoArray(e){var r=-1;for(i=0;i<_arrWindowMobileDeviceInfo.length;++i)if(_arrWindowMobileDeviceInfo[i].windowId==e){r=i;break}-1!=r&&_arrWindowMobileDeviceInfo.splice(r,1)}function getHeadersWithModifiedUserAgent(e,i){for(var r=i.requestHeaders,n=0,o=r.length;n<o;++n)if("User-Agent"==r[n].name){r[n].value=e;break}return r}function getCurrentUserAgent(e){for(var i=e.requestHeaders,r="",n=0,o=i.length;n<o;++n)if("User-Agent"==i[n].name){r=i[n].value;break}return r}function logToConsole(e){_isLoggingEnabled&&console.log(e)}chrome.webRequest.onBeforeSendHeaders.addListener(handler2,{urls:["<all_urls>"]},["requestHeaders","blocking","extraHeaders"]);